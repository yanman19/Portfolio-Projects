import pandas as pd
import panel as pn
from datetime import timedelta
from scipy.stats import percentileofscore

def create_cash_summary(df, lists_of_items, titles):
    df.index = df['MARKETDATE']
    latest_date = df.index.max()

    # Define date range: last 10 days
    date_range = [latest_date - pd.Timedelta(days=i) for i in reversed(range(11))]
    df.index = pd.to_datetime(df.index)
    df = df[df.index.isin(date_range)]

    colors = ['#D0EAF8', '#D6F5ED', '#FDF3DC', '#F5B7B1']
    tables = []

    for item_list, color, title in zip(lists_of_items, colors, titles):
        df_subset = df[item_list].copy()
        subset = df_subset.resample('D').mean()

        avg_10 = df_subset.rolling(window=10, min_periods=10).mean().iloc[-1]
        avg_5 = df_subset.rolling(window=5, min_periods=5).mean().iloc[-1]

        # Historical same-time-of-year values
        today = df.index.max()
        historical_values_10 = []
        historical_values_5 = []

        for past_year in range(1, 6):  # Adjust this range as needed
            try:
                past_date = today - pd.DateOffset(years=past_year)
                date_range_10 = df[(df.index >= past_date - timedelta(days=9)) & (df.index <= past_date)]
                date_range_5 = df[(df.index >= past_date - timedelta(days=4)) & (df.index <= past_date)]

                if len(date_range_10) == 10:
                    historical_values_10.append(date_range_10[item_list].mean())
                if len(date_range_5) == 5:
                    historical_values_5.append(date_range_5[item_list].mean())
            except:
                continue

        hist_10_df = pd.DataFrame(historical_values_10)
        hist_5_df = pd.DataFrame(historical_values_5)

        pct_10 = hist_10_df.apply(lambda col: percentileofscore(col.dropna(), avg_10[col.name]), axis=0)
        pct_5 = hist_5_df.apply(lambda col: percentileofscore(col.dropna(), avg_5[col.name]), axis=0)

        subset = pd.DataFrame(index=item_list)
        subset['TEN DAY AVG'] = avg_10.values
        subset['FIVE DAY AVG'] = avg_5.values
        subset['TEN DAY PCTLE'] = pct_10.values
        subset['FIVE DAY PCTLE'] = pct_5.values
        subset = subset.round(1)

        styled = subset.style.set_properties(**{
            'background-color': 'white',
            'color': 'black',
            'border-color': 'black',
            'border-style': 'solid',
            'border-width': '1px',
            'font-family': 'Arial',
            'font-size': '12px'
        }).set_table_styles(
            [{
                'selector': 'th',
                'props': [('background-color', 'white'), ('font-family', 'Arial, sans-serif'), ('font-size', '12px')]
            }]
        ).set_table_attributes('style="width: 100%;"').set_properties(subset=pd.IndexSlice[:, :], **{
            'min-width': '150px', 'max-width': '250px'
        })

        def highlight_row(row):
            return ['background-color: {}'.format(color)] * len(row)

        styled = styled.apply(highlight_row, axis=1)

        markdown = pn.pane.Markdown(f'### {title}', style={'font-size': '20px', 'font-family': 'Arial, sans-serif'})
        tables.append(pn.Column(markdown, pn.pane.HTML(styled.to_html()), height=250, width=500))
        tables.append(pn.Spacer(height=10))

    return pn.Column(*tables)