import pandas as pd
import numpy as np

def create_supply_timeseries(goldbook_df, retired_df, future_df):
    # Generate a monthly date range from 1/1/2010 to 1/1/2040
    date_range = pd.date_range(start="2010-01-01", end="2040-01-01", freq='MS')

    # Initialize the resultant DataFrame
    time_series_df = pd.DataFrame(index=date_range)

    # Process currently active power plants
    for fuel_type in goldbook_df['fuel_type'].unique():
        time_series_df[fuel_type] = np.where(date_range >= pd.Timestamp('2024-01-31'), 
                                             goldbook_df[goldbook_df['fuel_type'] == fuel_type].shape[0], 
                                             0)

    # Adjust for retired power plants
    for index, row in retired_df.iterrows():
        fuel_type = row['fuel_type']
        retirement_date = pd.Timestamp(row['retirement_date'])
        # Ensure the fuel_type column exists in the time_series_df before subtracting
        if fuel_type not in time_series_df.columns:
            time_series_df[fuel_type] = 0
        time_series_df[fuel_type] = np.where(date_range < retirement_date, 
                                             time_series_df[fuel_type] - 1, 
                                             time_series_df[fuel_type])

    # Account for future power plants
    for index, row in future_df.iterrows():
        fuel_type = row['fuel_type']
        start_date = pd.Timestamp(row['start_date'])
        # Ensure the fuel_type column exists in the time_series_df before adding
        if fuel_type not in time_series_df.columns:
            time_series_df[fuel_type] = 0
        time_series_df[fuel_type] = np.where(date_range >= start_date, 
                                             time_series_df[fuel_type] + 1, 
                                             time_series_df[fuel_type])

    return time_series_df

# Assuming goldbook_df, retired_df, and future_df are your DataFrames
# result_df = create_supply_timeseries(goldbook_df, retired_df, future_df)
# print(result_df)