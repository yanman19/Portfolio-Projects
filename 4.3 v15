def create_tab_content(df, all_columns, tab_label):
    trade_types = ['SPARK_7', 'SPARK_10', 'FP', 'HR', 'GASBASIS']
    dropdown = pn.widgets.Select(name='Trade Type:', options=trade_types, width=200)
    grid_area = pn.Column(sizing_mode='stretch_width')

    def render_table(keyword):
        grid_area.clear()
        matching_cols = [col for col in df.columns if keyword in col]

        if not matching_cols:
            grid_area.append(pn.pane.Markdown(f"**No columns found for '{keyword}'**"))
            return

        for i in range(0, len(matching_cols), 2):
            row = pn.Row(sizing_mode='stretch_width', width=2500)

            col1 = matching_cols[i]
            styled1 = create_seasonal_pivot(df, col1)
            title1 = pn.pane.Markdown(
                f"<div style='text-align:center; font-size:20px; font-weight:600; margin-bottom:10px;'>{col1}</div>"
            )
            table1 = pn.pane.HTML(styled1.render(), width=1200, height=400)
            block1 = pn.Column(title1, table1, width=1200)
            row.append(block1)

            if i + 1 < len(matching_cols):
                col2 = matching_cols[i + 1]
                styled2 = create_seasonal_pivot(df, col2)
                title2 = pn.pane.Markdown(
                    f"<div style='text-align:center; font-size:20px; font-weight:600; margin-bottom:10px;'>{col2}</div>"
                )
                table2 = pn.pane.HTML(styled2.render(), width=1200, height=400)
                block2 = pn.Column(title2, table2, width=1200)
                row.append(block2)

            grid_area.append(row)
            grid_area.append(pn.Spacer(height=30))

    # Use pn.bind instead of manual .watch()
    content = pn.bind(render_table, dropdown)

    return pn.Column(
        pn.Row(dropdown, width=300, margin=(0, 0, 20, 0)),
        pn.Spacer(height=10),
        content,
        grid_area,
        width=2500
    )