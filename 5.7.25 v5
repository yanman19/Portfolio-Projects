def create_cash_pivot_table(df, column_list):
    df = df.copy()
    df['MARKETDATE'] = pd.to_datetime(df['MARKETDATE'])
    df['ME'] = df['HE'].astype(int)

    today = pd.Timestamp.today().normalize()
    start_date = today - pd.Timedelta(days=15)
    end_date = today + pd.Timedelta(days=7)

    df_filtered = df[(df['MARKETDATE'] >= start_date) & (df['MARKETDATE'] <= end_date)]

    for col in column_list:
        sub_df = df_filtered[['ME', 'MARKETDATE', col]].copy()
        sub_df[col] = sub_df[col].fillna(0)

        pivot = sub_df.pivot_table(index='ME', columns='MARKETDATE', values=col, aggfunc='mean')
        peak_hours = list(range(7, 23))
        offpeak_hours = [h for h in range(1, 25) if h not in peak_hours]
        peak_avg = pivot.loc[pivot.index.isin(peak_hours)].mean()
        offpeak_avg = pivot.loc[pivot.index.isin(offpeak_hours)].mean()
        pivot.columns = pivot.columns.strftime('%m/%d')

        html_parts = []
        html_parts.append('''
        <div style="text-align:center; font-weight:bold; margin-bottom:5px;">DALoad</div>
        <table style="border-collapse:collapse; font-size:8px; margin:0 auto; table-layout:fixed;">
        ''')

        html_parts.append('<tr><th style="padding:1px 3px; border:1px solid #ddd; width:45px;">HE</th>')
        for col_name in pivot.columns:
            today_style = 'background-color:#e6f0ff;' if col_name == today.strftime('%m/%d') else ''
            html_parts.append(f'<th style="padding:1px 2px; border:1px solid #ddd; width:35px; {today_style}">{col_name}</th>')
        html_parts.append('</tr>')

        for idx in pivot.index:
            html_parts.append(f'<tr><td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:45px;">{idx}</td>')
            for col_name in pivot.columns:
                val = pivot.loc[idx, col_name]
                today_style = 'background-color:#e6f0ff;' if col_name == today.strftime('%m/%d') else ''
                html_parts.append(f'<td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:35px; height:22px; {today_style}">{int(val)}</td>')
            html_parts.append('</tr>')

        html_parts.append('<tr style="background-color:#f0f0f0; font-weight:bold;">')
        html_parts.append('<td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:45px;">Peak</td>')
        for col_name in pivot.columns:
            val = peak_avg[col_name]
            today_style = 'background-color:#e6f0ff;' if col_name == today.strftime('%m/%d') else ''
            html_parts.append(f'<td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:35px; height:22px; {today_style}">{int(val)}</td>')
        html_parts.append('</tr>')

        html_parts.append('<tr style="background-color:#f0f0f0; font-weight:bold;">')
        html_parts.append('<td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:45px;">OffPeak</td>')
        for col_name in pivot.columns:
            val = offpeak_avg[col_name]
            today_style = 'background-color:#e6f0ff;' if col_name == today.strftime('%m/%d') else ''
            html_parts.append(f'<td style="padding:1px 2px; border:1px solid #ddd; text-align:center; width:35px; height:22px; {today_style}">{int(val)}</td>')
        html_parts.append('</tr>')

        html_parts.append('</table>')
        return ''.join(html_parts)