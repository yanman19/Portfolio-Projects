import pandas as pd
import os

# Define the directory where your CSVs are stored
directory = "/path/to/your/csv/files"

# Commodity letter to month mapping (assumes only valid months)
commodity_mapping = {
    'F': 1,  # January
    'G': 2,  # February
    'H': 3,  # March
    'J': 4,  # April
    'K': 5,  # May
    'M': 6,  # June
    'N': 7,  # July
    'Q': 8,  # August
    'U': 9,  # September
    'V': 10, # October
    'X': 11, # November
    'Z': 12  # December
}

# Assuming `prices_df` is the existing DataFrame with commodity prices as the index
commodity_column = 'MASSHUB_PEAK'

# Ensure index is string
prices_df.index = prices_df.index.astype(str)

# Loop through the years 2024 through 2028
for year_in_question in range(2024, 2029):

    # Prepare an empty dictionary to store data for comparison
    comparison_data = {
        'Month': [],
        'Market Price': [],
        'Fair Value': [],
        'Difference': []
    }

    # Loop through each file in the directory
    for filename in os.listdir(directory):
        if filename.startswith(f"NEPOOL_Scenarios_Monthly_") and str(year_in_question) in filename:
            parts = filename.split('_')
            month = parts[3]
            file_year = parts[4].split('.')[0]

            file_path = os.path.join(directory, filename)
            csv_df = pd.read_csv(file_path)

            # Normalize column names and look for 'Predict Price' column
            csv_df.columns = csv_df.columns.str.strip().str.lower()

            # Make sure 'predict price' is the column being used
            if 'predict price' in csv_df.columns:
                avg_predict_price = csv_df['predict price'].mean()

                # Iterate over the index of prices_df to find the corresponding commodity
                for commodity_key in prices_df.index:
                    commodity_letter = commodity_key[0]  # First letter (e.g., 'F')
                    commodity_year = commodity_key[1:]   # Year part (e.g., '24')

                    # Convert commodity year to full year
                    full_year = f"20{commodity_year}"

                    # Map the commodity letter to the corresponding month
                    commodity_month = commodity_mapping.get(commodity_letter)

                    # Check if the commodity month and year match the current file being processed
                    if commodity_month == int(month) and full_year == file_year:
                        market_price = prices_df.loc[commodity_key, commodity_column]
                        difference = market_price - avg_predict_price

                        # Append results to comparison_data
                        comparison_data['Month'].append(int(month))  # Use integer for month
                        comparison_data['Market Price'].append(market_price)
                        comparison_data['Fair Value'].append(avg_predict_price)
                        comparison_data['Difference'].append(difference)

    # Create DataFrame from comparison data
    comparison_df = pd.DataFrame(comparison_data)

    # Pivot the table to show months as columns and rows for 'Market Price', 'Fair Value', and 'Difference'
    final_df = comparison_df.pivot_table(index=['Market Price', 'Fair Value', 'Difference'], columns='Month', aggfunc='first')

    # Save the final DataFrame to CSV
    output_file = os.path.join(directory, f'FV_Market_{year_in_question}.csv')
    final_df.to_csv(output_file)
    print(f"Saved file: {output_file}")