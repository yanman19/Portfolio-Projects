import pandas as pd
import matplotlib.pyplot as plt
import re

def plot_contract_with_vintage_overlay(df, contract_col):
    today = df.index.max() - pd.Timedelta(days=1)
    six_months_ago = today - pd.DateOffset(months=6)

    match = re.search(r'([A-Z][a-z]{2})(\d{2})$', contract_col)
    if not match:
        raise ValueError("Contract column must end in 'MonYY' format, e.g., 'Apr29'")
    
    month_str, year_suffix = match.groups()
    current_year = int('20' + year_suffix)
    vintage_year = current_year - 1
    vintage_suffix = str(vintage_year)[-2:]
    vintage_col = contract_col.replace(f"{month_str}{year_suffix}", f"{month_str}{vintage_suffix}")

    df_filtered = df[[col for col in [contract_col, vintage_col] if col in df.columns]].copy()
    df_filtered = df_filtered.loc[six_months_ago:today]

    vintage_start = six_months_ago - pd.DateOffset(years=1)
    vintage_end = today - pd.DateOffset(years=1)

    vintage_data = df[[vintage_col]].copy() if vintage_col in df.columns else pd.DataFrame()
    vintage_data = vintage_data.loc[vintage_start:vintage_end]
    vintage_data.index += pd.DateOffset(years=1)

    aligned_df = df_filtered[[contract_col]].merge(
        vintage_data, left_index=True, right_index=True, how='inner'
    )

    plt.figure(figsize=(12, 6))
    if contract_col in aligned_df:
        plt.plot(aligned_df.index.strftime('%m_%d'), aligned_df[contract_col], label=str(current_year))
    if vintage_col in aligned_df:
        plt.plot(aligned_df.index.strftime('%m_%d'), aligned_df[vintage_col], label=str(vintage_year))
    plt.xlabel('Date (MM_DD)')
    plt.ylabel('Price')
    plt.title(f'{contract_col} vs {vintage_col}')
    plt.legend()
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()