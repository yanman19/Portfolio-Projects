import os
from dash import dcc, html

# Define the base path for the charts folder (where your charts are saved)
charts_base_path = "/your/constant/file/path"  # Update this with your actual path

@app.callback(
    Output('page-content', 'children'),
    [Input('url', 'pathname')]
)
def display_page(pathname):
    # Handle NEPOOL page with year links
    if pathname == '/nepool':
        return nepool_layout()

    if pathname == '/nepool/chart-zone':
        return chart_zone_layout()

    elif pathname == '/nepool/input-tracker':
        return input_tracker_layout(variables)  # Pass the list of variables here

    # Handle year pages
    elif pathname == '/nepool/2024':
        return generate_year_layout(2024)
    elif pathname == '/nepool/2025':
        return generate_year_layout(2025)
    elif pathname == '/nepool/2026':
        return generate_year_layout(2026)
    elif pathname == '/nepool/2027':
        return generate_year_layout(2027)
    elif pathname == '/nepool/2028':
        return generate_year_layout(2028)

    # Handle month-specific pages with links to Monthly, Daily, Hourly pages for any year/month
    elif '/month' in pathname and len(pathname.split('/')) == 5:
        year = pathname.split('/')[2]
        month = pathname.split('/')[4]
        return generate_month_layout(year, month)  # Handle month-specific page

    # Handle Monthly, Daily, Hourly pages for any year/month
    elif 'monthly' in pathname:
        year, month = pathname.split('/')[2], pathname.split('/')[4]  # Extract year and month
        return generate_time_layout(year, month, 'Monthly')
    
    elif 'daily' in pathname:
        year, month = pathname.split('/')[2], pathname.split('/')[4]
        return generate_time_layout(year, month, 'Daily')
    
    elif 'hourly' in pathname:
        year, month = pathname.split('/')[2], pathname.split('/')[4]
        return generate_time_layout(year, month, 'Hourly')

    # Handle the chart display for month-specific NEPOOL pages (e.g., /nepool/2024/month/1)
    elif '/nepool/' in pathname and '/month/' in pathname:
        # Extract the year and month from the URL
        parts = pathname.split('/')
        year = parts[2]  # e.g., 2024
        month = parts[4]  # Extract the month

        # Define the file path for the chart corresponding to the selected month
        slack_chart = os.path.join(charts_base_path, f"slack_hr_month_{month}_slack.png")

        # Check if the chart exists
        if os.path.exists(slack_chart):
            chart_img = html.Img(src=f"/assets/{os.path.basename(slack_chart)}", style={'width': '100%'})
        else:
            chart_img = html.Div(f"No chart available for month {month}", style={'textAlign': 'center', 'color': 'red'})

        # Return the layout for the month page, showing the chart
        return html.Div([
            html.H1(f'NEPOOL Data for Month {month}', style={'textAlign': 'center'}),
            html.Div(chart_img, style={'textAlign': 'center'}),
        ])

    # Return the homepage as default
    else:
        return yanus_layout()