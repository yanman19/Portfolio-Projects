def create_weighted_contracts(df, hours_df):
    df = df.copy()
    
    hours_df['MonthYear'] = hours_df['Letter Contract'].str[:3] + hours_df['Letter Contract'].str[-2:]
    hour_map = dict(zip(hours_df['MonthYear'], hours_df['PEAK']))
    
    month_groups = {
        'Winter': ['Jan', 'Feb'],
        'Summer': ['Jul', 'Aug'],
        'Q4': ['Oct', 'Nov', 'Dec'],
        'Cal': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    }

    product_year_map = {}
    for col in df.columns:
        parts = col.split('_')
        if len(parts) < 2:
            continue
        product = '_'.join(parts[:-1]) + '_'
        month = parts[-1][:3]
        year = parts[-1][-2:]
        key = (product, year)
        product_year_map.setdefault(key, []).append((col, month + year))

    for (product, year), col_months in product_year_map.items():
        month_to_col = {m[:3]: col for col, m in col_months}
        for group_name, group_months in month_groups.items():
            matched_cols = []
            weights = []
            for m in group_months:
                if m in month_to_col:
                    tag = m + year
                    if tag in hour_map:
                        matched_cols.append(month_to_col[m])
                        weights.append(hour_map[tag])
            if matched_cols and weights:
                weighted = df[matched_cols].multiply(weights, axis=1).sum(axis=1) / sum(weights)
                new_col = f"{product}{group_name}{year}"
                df[new_col] = weighted

    return df