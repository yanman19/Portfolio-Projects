import pandas as pd
from dash import dcc, html
import dash_table
import os

CSV_PATH = "/path/to/your/csv/files"

def generate_year_layout(year):
    # Define the path to the CSV for the corresponding year
    csv_file = os.path.join(CSV_PATH, f'FV_Market_{year}.csv')

    # Load the DataFrame from the CSV
    df = pd.read_csv(csv_file)

    # Layout containing the month links, back button, and table
    return html.Div([
        html.H1(f'Select a Month for Year {year}'),
        
        # Links for each month
        html.Div([
            html.A(str(i), href=f'/nepool/{year}/month/{i}', style={'margin-right': '10px'}) for i in range(1, 13)
        ]),
        
        # Add a button or link to go back to NEPOOL
        html.Div([
            html.A('Go back to NEPOOL', href='/nepool')
        ], style={'margin-bottom': '20px'}),

        # Display the table with conditional formatting on the "Difference" column
        dash_table.DataTable(
            id='table',
            columns=[{"name": i, "id": i} for i in df.columns],
            data=df.to_dict('records'),
            style_data_conditional=[
                {
                    'if': {
                        'filter_query': '{Difference} < 0',
                        'column_id': 'Difference'
                    },
                    'backgroundColor': 'lightgreen',
                    'color': 'black'
                },
                {
                    'if': {
                        'filter_query': '{Difference} >= 0',
                        'column_id': 'Difference'
                    },
                    'backgroundColor': 'lightcoral',
                    'color': 'black'
                },
            ],
            style_cell={'textAlign': 'left'},
            style_table={'overflowX': 'auto'},
        ),
    ])