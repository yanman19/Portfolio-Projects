import pandas as pd

# Sample DataFrame Creation (Replace this with your actual DataFrame)
data = {
    'month': ['January', 'February', 'March', 'April', 'May', 'June',
              'July', 'August', 'September', 'October', 'November', 'December'] * 4,  # 4 years
    'year': [2025]*12 + [2026]*12 + [2027]*12 + [2028]*12,
    'var1': range(1, 49),
    'var2': range(101, 149),
    # ... up to var15
    'var15': range(1501, 1549)
}
df = pd.DataFrame(data)

# Define the assign_variables Function
def assign_variables(df, desired_month, desired_year):
    """
    Assigns variables to the global namespace based on DataFrame values for a specific month and year.
    """
    filtered_df = df[(df['month'] == desired_month) & (df['year'] == desired_year)]
    
    if filtered_df.empty:
        print(f"No data found for {desired_month} {desired_year}. Skipping.")
        return False  # Indicate that assignment was unsuccessful

    row = filtered_df.iloc[0]
    
    for column in df.columns:
        if column not in ['month', 'year']:
            globals()[column] = row[column]
    return True  # Indicate that assignment was successful

# Define Your Desired Function
def desired_function():
    """
    Placeholder for your actual function that utilizes the assigned variables.
    Replace the print statements with your actual processing logic.
    """
    # Example Processing: Print var1 and var2
    print(f"Processing with var1={var1}, var2={var2}, var15={var15}")
    # Add your actual processing logic here

# Define the List of Months (Ensure consistency with your DataFrame)
months = ['January', 'February', 'March', 'April', 'May', 'June',
          'July', 'August', 'September', 'October', 'November', 'December']

# Define the List of Years
years = [2025, 2026, 2027, 2028]

# Loop Through Each Year and Month
for year in years:
    for month in months:
        print(f"\nAssigning variables for {month} {year}...")
        success = assign_variables(df, month, year)
        if success:
            desired_function()